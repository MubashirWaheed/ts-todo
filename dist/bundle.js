(()=>{"use strict";var e={607:function(e,t,r){var n=this&&this.__spreadArray||function(e,t,r){if(r||2===arguments.length)for(var n,o=0,a=t.length;o<a;o++)!n&&o in t||(n||(n=Array.prototype.slice.call(t,0,o)),n[o]=t[o]);return e.concat(n||Array.prototype.slice.call(t))};Object.defineProperty(t,"__esModule",{value:!0});var o,a=r(614),i=document.querySelector("#todo"),c=document.querySelector("#add-btn"),d=document.querySelector("#input"),u=[],s=function(){u.forEach((function(e){var t=document.createElement("div");t.classList.add("item");var r=document.createElement("li");r.classList.add("todo");var n=document.createElement("input");n.type="checkbox",n.id="".concat(e.id),e.completed&&(n.checked=!0);var o=document.createElement("label");o.textContent=e.todo,o.htmlFor="".concat(e.id);var a=document.createElement("div"),c=document.createElement("button");c.textContent="Edit ",c.classList.add("editBtn");var d=document.createElement("button");d.textContent="Delete",d.classList.add("deleteBtn"),a.appendChild(c),a.appendChild(d),r.appendChild(n),r.appendChild(o),t.appendChild(r),t.appendChild(a),i.appendChild(t)}))};c.addEventListener("click",(function(e){var t,r;""!=d.value&&("Update"==e.target.textContent?function(e){u.map((function(t){t.id==e&&(t.todo=d.value)}))}(o):(t=d.value,r={id:(0,a.v4)(),todo:t,completed:!1,createdDate:new Date},u.push(r)),d.value="",i.innerHTML="",c.textContent="Add Task",s())})),document.addEventListener("click",(function(e){if(e.target.classList.contains("editBtn")){o=e.target.parentNode.parentNode.childNodes[0].childNodes[0].id;var t=e.target.parentNode.parentNode.childNodes[0].childNodes[1].innerText;d.value=t,c.textContent="Update"}else if(e.target.classList.contains("deleteBtn")){o=e.target.parentNode.parentNode.childNodes[0].childNodes[0].id;var r=u.filter((function(e){if(e.id!==o)return e}));u=[],u=n([],r,!0),i.innerHTML="",s()}else e.target.parentNode.classList.contains("todo")&&(o=e.target.parentNode.parentNode.childNodes[0].childNodes[0].id,r=void 0,r=e.target.parentNode.childNodes[0].checked?u.map((function(e){return e.id==o?(e.completed=!0,e):e})):u.map((function(e){return e.id==o?(e.completed=!1,e):e})),u=[],u=n([],r,!0),i.innerHTML="",s())}))},614:(e,t,r)=>{var n;r.r(t),r.d(t,{NIL:()=>M,parse:()=>y,stringify:()=>s,v1:()=>h,v3:()=>E,v4:()=>I,v5:()=>S,validate:()=>c,version:()=>T});var o=new Uint8Array(16);function a(){if(!n&&!(n="undefined"!=typeof crypto&&crypto.getRandomValues&&crypto.getRandomValues.bind(crypto)||"undefined"!=typeof msCrypto&&"function"==typeof msCrypto.getRandomValues&&msCrypto.getRandomValues.bind(msCrypto)))throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");return n(o)}const i=/^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i,c=function(e){return"string"==typeof e&&i.test(e)};for(var d=[],u=0;u<256;++u)d.push((u+256).toString(16).substr(1));const s=function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,r=(d[e[t+0]]+d[e[t+1]]+d[e[t+2]]+d[e[t+3]]+"-"+d[e[t+4]]+d[e[t+5]]+"-"+d[e[t+6]]+d[e[t+7]]+"-"+d[e[t+8]]+d[e[t+9]]+"-"+d[e[t+10]]+d[e[t+11]]+d[e[t+12]]+d[e[t+13]]+d[e[t+14]]+d[e[t+15]]).toLowerCase();if(!c(r))throw TypeError("Stringified UUID is invalid");return r};var l,p,f=0,v=0;const h=function(e,t,r){var n=t&&r||0,o=t||new Array(16),i=(e=e||{}).node||l,c=void 0!==e.clockseq?e.clockseq:p;if(null==i||null==c){var d=e.random||(e.rng||a)();null==i&&(i=l=[1|d[0],d[1],d[2],d[3],d[4],d[5]]),null==c&&(c=p=16383&(d[6]<<8|d[7]))}var u=void 0!==e.msecs?e.msecs:Date.now(),h=void 0!==e.nsecs?e.nsecs:v+1,y=u-f+(h-v)/1e4;if(y<0&&void 0===e.clockseq&&(c=c+1&16383),(y<0||u>f)&&void 0===e.nsecs&&(h=0),h>=1e4)throw new Error("uuid.v1(): Can't create more than 10M uuids/sec");f=u,v=h,p=c;var m=(1e4*(268435455&(u+=122192928e5))+h)%4294967296;o[n++]=m>>>24&255,o[n++]=m>>>16&255,o[n++]=m>>>8&255,o[n++]=255&m;var g=u/4294967296*1e4&268435455;o[n++]=g>>>8&255,o[n++]=255&g,o[n++]=g>>>24&15|16,o[n++]=g>>>16&255,o[n++]=c>>>8|128,o[n++]=255&c;for(var b=0;b<6;++b)o[n+b]=i[b];return t||s(o)},y=function(e){if(!c(e))throw TypeError("Invalid UUID");var t,r=new Uint8Array(16);return r[0]=(t=parseInt(e.slice(0,8),16))>>>24,r[1]=t>>>16&255,r[2]=t>>>8&255,r[3]=255&t,r[4]=(t=parseInt(e.slice(9,13),16))>>>8,r[5]=255&t,r[6]=(t=parseInt(e.slice(14,18),16))>>>8,r[7]=255&t,r[8]=(t=parseInt(e.slice(19,23),16))>>>8,r[9]=255&t,r[10]=(t=parseInt(e.slice(24,36),16))/1099511627776&255,r[11]=t/4294967296&255,r[12]=t>>>24&255,r[13]=t>>>16&255,r[14]=t>>>8&255,r[15]=255&t,r};function m(e,t,r){function n(e,n,o,a){if("string"==typeof e&&(e=function(e){e=unescape(encodeURIComponent(e));for(var t=[],r=0;r<e.length;++r)t.push(e.charCodeAt(r));return t}(e)),"string"==typeof n&&(n=y(n)),16!==n.length)throw TypeError("Namespace must be array-like (16 iterable integer values, 0-255)");var i=new Uint8Array(16+e.length);if(i.set(n),i.set(e,n.length),(i=r(i))[6]=15&i[6]|t,i[8]=63&i[8]|128,o){a=a||0;for(var c=0;c<16;++c)o[a+c]=i[c];return o}return s(i)}try{n.name=e}catch(e){}return n.DNS="6ba7b810-9dad-11d1-80b4-00c04fd430c8",n.URL="6ba7b811-9dad-11d1-80b4-00c04fd430c8",n}function g(e){return 14+(e+64>>>9<<4)+1}function b(e,t){var r=(65535&e)+(65535&t);return(e>>16)+(t>>16)+(r>>16)<<16|65535&r}function C(e,t,r,n,o,a){return b((i=b(b(t,e),b(n,a)))<<(c=o)|i>>>32-c,r);var i,c}function w(e,t,r,n,o,a,i){return C(t&r|~t&n,e,t,o,a,i)}function N(e,t,r,n,o,a,i){return C(t&n|r&~n,e,t,o,a,i)}function A(e,t,r,n,o,a,i){return C(t^r^n,e,t,o,a,i)}function U(e,t,r,n,o,a,i){return C(r^(t|~n),e,t,o,a,i)}const E=m("v3",48,(function(e){if("string"==typeof e){var t=unescape(encodeURIComponent(e));e=new Uint8Array(t.length);for(var r=0;r<t.length;++r)e[r]=t.charCodeAt(r)}return function(e){for(var t=[],r=32*e.length,n="0123456789abcdef",o=0;o<r;o+=8){var a=e[o>>5]>>>o%32&255,i=parseInt(n.charAt(a>>>4&15)+n.charAt(15&a),16);t.push(i)}return t}(function(e,t){e[t>>5]|=128<<t%32,e[g(t)-1]=t;for(var r=1732584193,n=-271733879,o=-1732584194,a=271733878,i=0;i<e.length;i+=16){var c=r,d=n,u=o,s=a;r=w(r,n,o,a,e[i],7,-680876936),a=w(a,r,n,o,e[i+1],12,-389564586),o=w(o,a,r,n,e[i+2],17,606105819),n=w(n,o,a,r,e[i+3],22,-1044525330),r=w(r,n,o,a,e[i+4],7,-176418897),a=w(a,r,n,o,e[i+5],12,1200080426),o=w(o,a,r,n,e[i+6],17,-1473231341),n=w(n,o,a,r,e[i+7],22,-45705983),r=w(r,n,o,a,e[i+8],7,1770035416),a=w(a,r,n,o,e[i+9],12,-1958414417),o=w(o,a,r,n,e[i+10],17,-42063),n=w(n,o,a,r,e[i+11],22,-1990404162),r=w(r,n,o,a,e[i+12],7,1804603682),a=w(a,r,n,o,e[i+13],12,-40341101),o=w(o,a,r,n,e[i+14],17,-1502002290),r=N(r,n=w(n,o,a,r,e[i+15],22,1236535329),o,a,e[i+1],5,-165796510),a=N(a,r,n,o,e[i+6],9,-1069501632),o=N(o,a,r,n,e[i+11],14,643717713),n=N(n,o,a,r,e[i],20,-373897302),r=N(r,n,o,a,e[i+5],5,-701558691),a=N(a,r,n,o,e[i+10],9,38016083),o=N(o,a,r,n,e[i+15],14,-660478335),n=N(n,o,a,r,e[i+4],20,-405537848),r=N(r,n,o,a,e[i+9],5,568446438),a=N(a,r,n,o,e[i+14],9,-1019803690),o=N(o,a,r,n,e[i+3],14,-187363961),n=N(n,o,a,r,e[i+8],20,1163531501),r=N(r,n,o,a,e[i+13],5,-1444681467),a=N(a,r,n,o,e[i+2],9,-51403784),o=N(o,a,r,n,e[i+7],14,1735328473),r=A(r,n=N(n,o,a,r,e[i+12],20,-1926607734),o,a,e[i+5],4,-378558),a=A(a,r,n,o,e[i+8],11,-2022574463),o=A(o,a,r,n,e[i+11],16,1839030562),n=A(n,o,a,r,e[i+14],23,-35309556),r=A(r,n,o,a,e[i+1],4,-1530992060),a=A(a,r,n,o,e[i+4],11,1272893353),o=A(o,a,r,n,e[i+7],16,-155497632),n=A(n,o,a,r,e[i+10],23,-1094730640),r=A(r,n,o,a,e[i+13],4,681279174),a=A(a,r,n,o,e[i],11,-358537222),o=A(o,a,r,n,e[i+3],16,-722521979),n=A(n,o,a,r,e[i+6],23,76029189),r=A(r,n,o,a,e[i+9],4,-640364487),a=A(a,r,n,o,e[i+12],11,-421815835),o=A(o,a,r,n,e[i+15],16,530742520),r=U(r,n=A(n,o,a,r,e[i+2],23,-995338651),o,a,e[i],6,-198630844),a=U(a,r,n,o,e[i+7],10,1126891415),o=U(o,a,r,n,e[i+14],15,-1416354905),n=U(n,o,a,r,e[i+5],21,-57434055),r=U(r,n,o,a,e[i+12],6,1700485571),a=U(a,r,n,o,e[i+3],10,-1894986606),o=U(o,a,r,n,e[i+10],15,-1051523),n=U(n,o,a,r,e[i+1],21,-2054922799),r=U(r,n,o,a,e[i+8],6,1873313359),a=U(a,r,n,o,e[i+15],10,-30611744),o=U(o,a,r,n,e[i+6],15,-1560198380),n=U(n,o,a,r,e[i+13],21,1309151649),r=U(r,n,o,a,e[i+4],6,-145523070),a=U(a,r,n,o,e[i+11],10,-1120210379),o=U(o,a,r,n,e[i+2],15,718787259),n=U(n,o,a,r,e[i+9],21,-343485551),r=b(r,c),n=b(n,d),o=b(o,u),a=b(a,s)}return[r,n,o,a]}(function(e){if(0===e.length)return[];for(var t=8*e.length,r=new Uint32Array(g(t)),n=0;n<t;n+=8)r[n>>5]|=(255&e[n/8])<<n%32;return r}(e),8*e.length))})),I=function(e,t,r){var n=(e=e||{}).random||(e.rng||a)();if(n[6]=15&n[6]|64,n[8]=63&n[8]|128,t){r=r||0;for(var o=0;o<16;++o)t[r+o]=n[o];return t}return s(n)};function L(e,t,r,n){switch(e){case 0:return t&r^~t&n;case 1:case 3:return t^r^n;case 2:return t&r^t&n^r&n}}function x(e,t){return e<<t|e>>>32-t}const S=m("v5",80,(function(e){var t=[1518500249,1859775393,2400959708,3395469782],r=[1732584193,4023233417,2562383102,271733878,3285377520];if("string"==typeof e){var n=unescape(encodeURIComponent(e));e=[];for(var o=0;o<n.length;++o)e.push(n.charCodeAt(o))}else Array.isArray(e)||(e=Array.prototype.slice.call(e));e.push(128);for(var a=e.length/4+2,i=Math.ceil(a/16),c=new Array(i),d=0;d<i;++d){for(var u=new Uint32Array(16),s=0;s<16;++s)u[s]=e[64*d+4*s]<<24|e[64*d+4*s+1]<<16|e[64*d+4*s+2]<<8|e[64*d+4*s+3];c[d]=u}c[i-1][14]=8*(e.length-1)/Math.pow(2,32),c[i-1][14]=Math.floor(c[i-1][14]),c[i-1][15]=8*(e.length-1)&4294967295;for(var l=0;l<i;++l){for(var p=new Uint32Array(80),f=0;f<16;++f)p[f]=c[l][f];for(var v=16;v<80;++v)p[v]=x(p[v-3]^p[v-8]^p[v-14]^p[v-16],1);for(var h=r[0],y=r[1],m=r[2],g=r[3],b=r[4],C=0;C<80;++C){var w=Math.floor(C/20),N=x(h,5)+L(w,y,m,g)+b+t[w]+p[C]>>>0;b=g,g=m,m=x(y,30)>>>0,y=h,h=N}r[0]=r[0]+h>>>0,r[1]=r[1]+y>>>0,r[2]=r[2]+m>>>0,r[3]=r[3]+g>>>0,r[4]=r[4]+b>>>0}return[r[0]>>24&255,r[0]>>16&255,r[0]>>8&255,255&r[0],r[1]>>24&255,r[1]>>16&255,r[1]>>8&255,255&r[1],r[2]>>24&255,r[2]>>16&255,r[2]>>8&255,255&r[2],r[3]>>24&255,r[3]>>16&255,r[3]>>8&255,255&r[3],r[4]>>24&255,r[4]>>16&255,r[4]>>8&255,255&r[4]]})),M="00000000-0000-0000-0000-000000000000",T=function(e){if(!c(e))throw TypeError("Invalid UUID");return parseInt(e.substr(14,1),16)}}},t={};function r(n){var o=t[n];if(void 0!==o)return o.exports;var a=t[n]={exports:{}};return e[n].call(a.exports,a,a.exports,r),a.exports}r.d=(e,t)=>{for(var n in t)r.o(t,n)&&!r.o(e,n)&&Object.defineProperty(e,n,{enumerable:!0,get:t[n]})},r.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),r.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},r(607)})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,